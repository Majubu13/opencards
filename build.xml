<project name="OpenCards" default="create-jar" basedir=".">


    <!--define kotlin compiler plugin-->
    <!--http://www.jguru.com/faq/view.jsp?EID=476788-->
    <!--<property environment="env" />-->
    <!--suppress AntResolveInspection -->
    <typedef resource="org/jetbrains/kotlin/ant/antlib.xml" classpath="${kotlin_lib_dir}/kotlin-ant.jar" />


    <property name="src.dir" location="${basedir}/src"/>
    <property name="resources.dir" location="${basedir}/resources"/>
    <property name="classes.dir" location="${basedir}/classes"/>
    <property name="lib.dir" location="${basedir}/lib"/>
    <property name="dist.dir" location="${basedir}/../oc-deployed"/>
    <property name="bin.dir" location="${basedir}/bin"/>

    <property name="project.name" value="opencards"/>
    <property name="project.version" value="2.5.0" />


    <path id="classpath">

        <fileset dir="${lib.dir}">
            <include name="**/*.jar"/>
        </fileset>
    </path>

    <condition property="notMac">
        <not>
            <os family="mac" />
        </not>
    </condition>


    <target name="compile" description="compile all sources">
        <mkdir dir="${classes.dir}"/>

        <javac srcdir="${src.dir}" destdir="${classes.dir}" debug="true" debuglevel="lines,source">

            <withKotlin />

            <classpath refid="classpath"/>

            <!--fix hidden eawt dependencies http://mail.openjdk.java.net/pipermail/macosx-port-dev/2011-September/000864.html -->
            <compilerarg value="-XDignore.symbol.file" />

            <!--<if id="isMac">-->
            <!-- enable the next line if you want to compile on other platforms than macos-->
            <exclude if="notMac" name="info/opencards/util/macos/OpenCardsWrapper4MacOSX.java" />
            <!--</if>-->
        </javac>
    </target>


    <target name="create-jar" depends="compile" description="Recreates the opencards.jar">

        <property name="jarfile" value="${project.name}.jar"/>
        <delete failonerror="true" file="${jarfile}"/>

        <jar basedir="${classes.dir}" destfile="${jarfile}"/>
        <jar update="true" basedir="${resources.dir}" excludes="**/*.svg" destfile="${jarfile}"/>
        <!--<jar update="true" basedir="${lib.mrj}" destfile="${jarfile}"/>-->

        <!--<jar basedir="${bin.dir}" includes="config/config.sxl" update="true" destfile="${project.name}.jar"/>-->
        <!--<jar basedir="${user.home}" includes=".winlayout" update="true" destfile="${project.name}.jar"/>-->

        <jar destfile="${jarfile}" update="true">
            <manifest>
                <attribute name="Built-By" value="Holger Brandl. All rights reserverd, 2011"/>
                <attribute name="Main-Class" value="info.opencards.OpenCards"/>
                <!-- this listing of jars can be created with find .  -name '*jar' | grep lib  | xargs echo -->
                <attribute name="Class-Path"
                    value="./lib/idea_rt.jar ./lib/intellij-markdown.jar ./lib/jcommon-1.0.10.jar ./lib/jfreechart-1.0.6.jar ./lib/junit-4.12.jar ./lib/kotlin-runtime.jar ./lib/poi/commons-codec-1.9.jar ./lib/poi/commons-logging-1.1.jar ./lib/poi/dom4j-1.6.1.jar ./lib/poi/junit-3.8.1.jar ./lib/poi/log4j-1.2.17.jar ./lib/poi/poi-3.14-20160307.jar ./lib/poi/poi-excelant-3.14-20160307.jar ./lib/poi/poi-ooxml-3.14-20160307.jar ./lib/poi/poi-ooxml-schemas-3.14-20160307.jar ./lib/poi/poi-scratchpad-3.14-20160307.jar ./lib/poi/stax-api-1.0.1.jar ./lib/poi/xmlbeans-2.6.0.jar ./lib/xmlpull-1.1.3.1.jar ./lib/xpp3_min-1.1.4c.jar ./lib/xstream-1.4.8.jar" />
                <!--<attribute name="SplashScreen-Image" value="Logo.gif"/>-->
            </manifest>
        </jar>
    </target>


    <taskdef name="bundleapp" classname="com.oracle.appbundler.AppBundlerTask">
        <classpath>
            <pathelement location="${basedir}/deployment/appbundler-1.0ea.jar" />
        </classpath>
    </taskdef>

    <!-- deploy appbundle for mountain lion-->
    <!--http://java.net/downloads/appbundler/appbundler.html-->
    <!--http://docs.oracle.com/javase/7/docs/technotes/guides/jweb/packagingAppsForMac.html-->
    <target name="deploy.macos" depends="create-jar" description="creates an app-bundle for macos">
        <mkdir dir="${dist.dir}"/>
        <delete file="${dist.dir}/Movito.app" />

        <fileset dir="${basedir}" id="myjars">
            <include name="lib/**/*.jar" />
            <include name="opencards.jar" />
        </fileset>

        <!--suppress AntResolveInspection -->
        <bundleapp outputdirectory="${dist.dir}" name="OpenCards" displayname="OpenCards"
            identifier="info.movito.opencards" shortversion="${project.version}" icon="deployment/opencards.icns"
            applicationCategory="public.app-category.developer-tools"
            mainclassname="info/opencards/util/macos/OpenCardsWrapper4MacOSX">
            <!--<runtime dir="${env.JAVA_HOME}"/>-->
            <classpath refid="myjars" />

            <option value="-Dcom.apple.macos.useScreenMenuBar=true" />
            <option value="-Dapple.laf.useScreenMenuBar=true" />
            <option value="-Dapple.awt.showGrowBox=true" />
            <option value="-Dapple.awt.graphics.EnableQ2DX=true" />
            <option value="-Dcom.apple.mrj.application.apple.menu.about.name=OpenCARDS" />
            <!--known to not work-->
            <option value="-DNSHighResolutionCapable=true" />

            <argument value="-Xmx512m" />
            <argument value=" -Xms256m" />
            <argument value="-Xdock:name=Movito" />
        </bundleapp>

        <exec executable="hdiutil" os="Mac OS X">
            <arg value="create" />
            <arg value="-srcfolder" />
            <arg value="${dist.dir}/OpenCards.app" />
            <arg value="-ov" />
            <arg value="${dist.dir}/OpenCards-${project.version}.dmg" />
        </exec>
    </target>

    <!--<target name="deploy.mac" depends="create-jar" description="creates a macos app for the opencards">-->
    <!--<mkdir dir="${dist.dir}"/>-->

    <!--&lt;!&ndash;readd this if you want an icon icon="rmicon.icns"&ndash;&gt;-->
    <!--<jarbundler dir="${dist.dir}"-->
    <!--name="OpenCards"-->
    <!--shortname="OpenCards"-->
    <!--mainclass="info.opencards.util.macos.OpenCardsWrapper4MacOSX"-->
    <!--icon="deployment/opencards.icns"-->
    <!--jvmversion="1.6+"-->
    <!--version="${project.version}"-->
    <!--vmoptions="-Xdebug -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=5005 -Xmx1024m -Xms512m -Dcom.apple.macos.useScreenMenuBar=true -Dapple.laf.useScreenMenuBar=true">-->

    <!--&lt;!&ndash;<javaproperty name="WorkingDirectory" value="$APP_PACKAGE/Contents/Resources/Java/"/>&ndash;&gt;-->

    <!--<jarfileset dir="${basedir}">-->
    <!--<include name="lib/**/*.jar"/>-->
    <!--<include name="opencards.jar"/>-->
    <!--</jarfileset>-->

    <!--&lt;!&ndash;<resourcefilelist dir="lib/" files="plugins/*" />&ndash;&gt;-->
    <!--<javaproperty name="apple.laf.useScreenMenuBar" value="true"/>-->
    <!--<javaproperty name="apple.awt.brushMetal" value="true"/>-->
    <!--<javaproperty name="apple.awt.showGrowBox" value="false"/>-->
    <!--<javaproperty name="apple.awt.graphics.EnableQ2DX" value="true"/>-->

    <!--</jarbundler>-->

    <!--&lt;!&ndash;<property name="maczip" value="${dist.dir}/${project.name}-${project.version}-macos.zip"/>&ndash;&gt;-->

    <!--&lt;!&ndash;<zip destfile="${maczip}">&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;<zip destfile="${maczip}">&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<zipfileset dir="${dist.dir}" includes="OpenCards.app/Contents/MacOS/JavaApplicationStub" filemode="755"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</zip>&ndash;&gt;-->

    <!--&lt;!&ndash;<zip basedir="${dist.dir}" destfile="${maczip}" update="TRUE">&ndash;&gt;-->
    <!--&lt;!&ndash;<include name="OpenCards.app/**"/>&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;<zipfileset dir="deployment" includes="OpenCards.app/**/JavaApplicationStub" filemode="755"/>&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;</zip>&ndash;&gt;-->

    <!--&lt;!&ndash;<zip destfile="${maczip}" update="TRUE" >&ndash;&gt;-->
    <!--&lt;!&ndash;&lt;!&ndash;<zip destfile="${maczip}">&ndash;&gt;&ndash;&gt;-->
    <!--&lt;!&ndash;<zipfileset dir="${dist.dir}" includes="OpenCards.app/Contents/MacOS/JavaApplicationStub" filemode="755"/>&ndash;&gt;-->
    <!--&lt;!&ndash;</zip>&ndash;&gt;-->

    <!--<exec executable="hdiutil" os="Mac OS X">-->
    <!--<arg value="create"/>-->
    <!--<arg value="-srcfolder"/>-->
    <!--<arg value="${dist.dir}/OpenCards.app"/>-->
    <!--<arg value="-ov"/>-->
    <!--<arg value="${dist.dir}/${project.name}-${project.version}-macos.dmg"/>-->
    <!--</exec>-->

    <!--</target>-->


    <target name="deploy.linux" depends="create-jar" description="creates a macos app for the opencards">
        <mkdir dir="${dist.dir}"/>

        <!-- to all contents to a subfolder in the the zip use the prefix attribute in the zipfileset-->
        <property name="multiplatzip" value="${dist.dir}/${project.name}-${project.version}-linux.zip"/>
        <zip basedir="${classes.dir}" destfile="${multiplatzip}"/>
        <zip destfile="${multiplatzip}" basedir="." includes="opencards.jar"/>
        <zip destfile="${multiplatzip}" basedir="." includes="lib/**/*.jar" update="TRUE"/>
        <zip destfile="${multiplatzip}" update="TRUE">
            <zipfileset dir="deployment" includes="OpenCards.sh" filemode="755"/>
        </zip>
    </target>


    <target name="deploy.win" depends="deploy.linux" description="creates a macos app for the opencards">
        <property name="winzip" value="${dist.dir}/${project.name}-${project.version}-windows.zip"/>
        <copyfile src="${dist.dir}/${project.name}-${project.version}-linux.zip" dest="${winzip}"/>

        <zip destfile="${winzip}" basedir="deployment" includes="OpenCards.exe" update="TRUE"/>
    </target>


    <target name="cleanAll" description="Remove all generated files">
        <delete dir="${dist.dir}" failonerror="true"/>
        <delete file="${project.name}.jar"/>
        <delete dir="${classes.dir}" failonerror="false"/>
    </target>


    <!-- register ant "deb" task -->
    <!--<path id="ant-deb.classpath">-->
    <!--<fileset dir="lib" includes="*.jar"/>-->
    <!--</path>-->

    <!---->
    <!-- Create a Debian package-->
    <!---->
    <taskdef name="deb" classname="com.googlecode.ant_deb_task.Deb">
        <classpath>
            <pathelement location="${basedir}/deployment/ant-deb.jar" />
        </classpath>
    </taskdef>

    <!--<taskdef name="desktopentry" classname="com.googlecode.ant_deb_task.DesktopEntry" classpathref="ant-deb.classpath"/>-->
    <!--<target name="create-desktop-entry">-->
    <!--<mkdir dir="build"/>-->
    <!--<desktopentry-->
    <!--toFile="deployment/OpenCards.desktop"-->
    <!--name="OpenCards"-->
    <!--comment="A free flashcard learning software for ppt-files"-->
    <!--exec="/usr/share/opencards/OpenCards.sh"-->
    <!--icon="/usr/share/${project.name}/oclogo.png"-->
    <!--categories="Education;Java"-->
    <!--/>-->
    <!--</target>-->

    <!-- very basic deb target -->
    <!-- unarchive a deb file on macos/linux with: ar vx my.deb -->
    <target name="deploy.debian" depends="create-jar" description="Creates a debian package">
        <deb package="opencards"
             todir="../oc-deployed" section="misc" priority="optional" homepage="http://opencards.info"
             depends="openjdk-7-jre | openjdk-7-jdk">
            <version upstream="${project.version}"/>
            <maintainer name="Holger Brandl" email="support@opencards.info" />
            <description synopsis="OpenCards is a free flashcard learning software for ppt-files">
                OpenCards is a free award-winning flashcard learning software. The basic idea of OpenCards is to use
                PowerPoint presentations (*.ppt) as flashcard sets. Thereby, slide-titles are considered as questions
                and the slide contents as their answers. Based on state-of-the-art memorization and scheduling
                algorithms OpenCards will help you to learn any set of flashcards.
            </description>

            <tarfileset dir="" prefix="usr/share/${project.name}">
                <include name="opencards.jar"/>
                <include name="lib/**"/>
            </tarfileset>
            <tarfileset file="deployment/OpenCards.sh" prefix="usr/share/${project.name}" filemode="755"/>
            <tarfileset dir="resources/info/opencards/icons" prefix="usr/share/${project.name}">
                <include name="oclogo.png"/>
            </tarfileset>
            <tarfileset file="deployment/OpenCards.desktop" prefix="usr/share/applications"/>

        </deb>
    </target>


    <target name="deploy.all" depends="deploy.linux, deploy.macos, deploy.win, deploy.debian"
            description="Creates a release for all platforms"/>

</project>